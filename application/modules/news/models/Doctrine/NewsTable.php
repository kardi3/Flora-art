<?php

/**
 * News_Model_Doctrine_NewsTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class News_Model_Doctrine_NewsTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object News_Model_Doctrine_NewsTable
     */
    public static function getInstance()
    {
        return Doctrine_Core::getTable('News_Model_Doctrine_News');
    }
    
    public function getNewsPaginationQuery($id, $field = 'id') {
        $q = $this->createQuery('a')
                ->addSelect('a.*')
                ->addSelect('at.*')
                ->addSelect('m.*')
                ->leftJoin('a.Translation at')
                ->leftJoin('a.Metatags m')
                ->andWhere('(a.publish = ? AND (a.publish_date <= ? OR a.publish_date IS NULL))', array(1, date('Y-m-d H:i:s')))
                ;
        if(is_integer($id)) {
            $q->andWhere('a.' . $field . ' = ?', array($id));
        } elseif(is_array($id) && !empty($id)) {
            $q->andWhere('a.' . $field . ' IN ?', array($id));
        }
        return $q;
    }
    
    public function getPublishNewsQuery($id, $field = 'id') {
        $q = $this->createQuery('a')
                ->addSelect('a.*')
                ->addSelect('at.*')
                ->addSelect('m.*')
                ->leftJoin('a.Translation at')
                ->leftJoin('a.Metatags m')
                ->andWhere('(a.publish = ? AND (a.publish_date <= ? OR a.publish_date IS NULL))', array(1, date('Y-m-d H:i:s')))
                ;
        if(is_integer($id)) {
            $q->andWhere('a.' . $field . ' = ?', array($id));
        } elseif(is_array($id) && !empty($id)) {
            $q->andWhere('a.' . $field . ' IN ?', array($id));
        }
        return $q;
    }
    
     public function getPhotoQuery(Doctrine_Query $q = null) {
        if(null == $q) {
            $q = $this->createQuery('a');
            $q->addSelect('a.*');
        }
        $q->addSelect('pr.*');
        $q->addSelect('p.*');
        $q->leftJoin('a.PhotoRoot pr');
        $q->leftJoin('a.Photos p');
        return $q;
    }
    
    public function getLimitQuery($limit, Doctrine_Query $q = null) {
        if(null == $q) {
            $q = $this->createQuery('a');
            $q->addSelect('a.*');
        }
        $q->limit($limit);
        return $q;
    }
}