<?php

/**
 * Media_Model_Doctrine_Photo
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    Admi
 * @subpackage Media
 * @author     Michał Folga <michalfolga@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class Media_Model_Doctrine_Photo extends Media_Model_Doctrine_BasePhoto {
    
    public static $newsPhotoDimensions = array(
        '126x126' => 'Photo in admin panel',   
        '120x90' => 'Miniaturka strona główna(120x90)',
        '570x320' => 'Miniaturka lista aktualności(570x320)',
        '300x150' => 'Główne zdjęcie(300x150)',
        '80x80' => 'Miniaturka aktualnosc(80x80)',
        '1070x600' => 'Miniaturka aktualnosc(1070x600)',
        '400x' => 'Backup photo(400x)',
    );
    
    public static $galleryPhotoDimensions = array(
        '126x126' => 'Photo in admin panel',                  // admin
	'266x150' => 'Miniaturka(266x150)',
	'1680x579' => 'Slider(1680x579)',
    );
    
    public static $slidePhotoDimensions = array(
        '126x126' => 'Admin slide list',
        '500x223' => 'Thumbnail',
        '1680x380' => 'Main photo'
    );
    
     public static $categoryPhotoDimensions = array(
        '126x126' => 'Photo in admin panel', // admin
        '270x150' => 'Thumb',
	 '120x90' => 'Thumb',
    );
    
     public static $pagePhotoDimensions = array(
        '126x126' => 'Photo in admin panel', // admin
        '570x300' => 'Thumb',
    );
    
     public static function getPagePhotoDimensions() {
        return self::$pagePhotoDimensions;
    }
     
     public static function getCategoryPhotoDimensions() {
        return self::$categoryPhotoDimensions;
    }
    
    public static function getSlidePhotoDimensions() {
        return self::$slidePhotoDimensions;
    }
    
    public static function getNewsPhotoDimensions() {
        return self::$newsPhotoDimensions;
    }
    
    public static function getProductPhotoDimensions() {
        return self::$newsPhotoDimensions;
    }
    
    public static function getGalleryPhotoDimensions() {
        return self::$galleryPhotoDimensions;
    }
    
    
    
    
    public function setId($id) {
        $this->_set('id', $id);
    }
    
    public function getId() {
        return $this->_get('id');
    }
     public function getRootId() {
        return $this->_get('root_id');
    }
     public function setRootId($id) {
        $this->_set('root_id',$id);
    }
    public function setFilename($filename) {
        $this->_set('filename', $filename);
    }
    
    public function getFilename() {
        return $this->_get('filename');
    }
    
    public function setTitle($title) {
        $this->_set('title', $title);
    }
    
    public function getTitle() {
        return $this->_get('title');
    }
    
    public function setCropData($cropData) {
        $this->_set('crop_data', $cropData);
    } 
    
    public function getCropData() {
        return $this->_get('crop_data');
    }
    public function setOffset($offset) {
        $this->_set('offset', $offset);
    }
    public function setLft($offset) {
        $this->_set('lft', $offset);
    }
    public function setRgt($offset) {
        $this->_set('rgt', $offset);
    }
    public function setLevel($offset) {
        $this->_set('level', $offset);
    }
    
    public function getOffset() {
        return $this->_get('offset');
    }
    
}